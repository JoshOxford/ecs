---
- key: ecs
  title: ECS
  description: >
    ECS fields.
  fields:
    
    - name: agent
      title: Agent
      group: 2
      description: >
        The agent fields contain the data about the agent/client/shipper that
        created the event.
      footnote: >
        Examples: In the case of Beats for logs, the agent.name is filebeat. For APM, it is the
        agent running in the app/service. The agent information does not change if
        data is sent through queuing systems like Kafka, Redis, or processing systems
        such as Logstash or APM Server.
      type: group
      fields:
    
        - name: version
          level: core
          type: keyword
          description: >
            Version of the agent.
    
          example: 6.0.0-rc2
    
        - name: name
          level: core
          type: keyword
          description: >
            Name of the agent.
    
          example: filebeat
    
        - name: id
          level: core
          type: keyword
          description: >
            Unique identifier of this agent (if one exists).
    
            Example: For Beats this would be beat.id.
          example: 8a4f500d
    
        - name: ephemeral_id
          level: extended
          type: keyword
          description: >
            Ephemeral identifier of this agent (if one exists).
    
            This id normally changes across restarts, but `agent.id` does not.
          example: 8a4f500f
    
    - name: base
      title: Base
      group: 1
      description: >
        The base set contains all fields which are on the top level. These fields are common across all types of events.
      type: group
      fields:
        - name: "@timestamp"
          type: date
          level: core
          required: true
          example: "2016-05-23T08:05:34.853Z"
          description: >
            Date/time when the event originated.
    
            For log events this is the date/time when the event was generated, and
            not when it was read.
    
            Required field for all events.
    
        - name: tags
          level: core
          type: keyword
          example: "[\"production\", \"env2\"]"
          description: >
            List of keywords used to tag each event.
    
        - name: labels
          level: core
          type: object
          example: {env: production, application: foo-bar}
          description: >
            Key/value pairs.
    
            Can be used to add meta information to events. Should not contain nested
            objects. All values are stored as keyword.
    
            Example: `docker` and `k8s` labels.
    
        - name: message
          level: core
          type: text
          example: "Hello World"
          description: >
            For log events the message field contains the log message.
    
            In other use cases the message field can be used to concatenate
            different values which are then freely searchable. If multiple
            messages exist, they can be combined into one message.
    
    - name: baseline
      title: Baseline
      group: 2
      description: >
        security baseline fields
        created the event.
      footnote: >
        Examples:
      type: group
      level: extended
      fields:
        - name: contact
          type: group
          level: extended
          description: >
           Contact responsible for the submission
          fields:
            - name: name
              type: keyword
              level: extended
              description: >
               Name of unit contact
            - name: email
              type: keyword
              level: extended
              description: >
               Email address of unit contact
            - name: telephone
              type: keyword
              level: extended
              description: >
               Telephone number of unit contact
            - name: jobtitle
              type: text
              level: extended
              description: >
               Jobtitle of unit contact
        - name: revision
          type: short
          level: extended
          description: >
           Revision of the baseline control set.
        - name: scope
          type: group
          level: extended
          description: >
           Scope of assessment
          fields:
            - name: included
              type: text
              level: extended
              description: >
               Description of in-scope systems for the baseline assessment.
            - name: excluded
              type: text
              level: extended
              description: >
               Description of out-of-scope systems for the baseline assessment.
        - name: hlma
          type: group
          level: extended
          description: >
           Higl Level Maturity Assessment
          fields:
            - name: id
              type: keyword
              level: extended
              description: >
                Identifier of the high level maturity control (e.g. ABC.01).
            - name: title
              type: keyword
              level: extended
              description: >
                TODO
            - name: description
              type: text
              level: extended
              description: >
                Description of the high level maturity control starting with the id.
            - name: category
              type: keyword
              level: extended
              description: >
                Category of the high level maturity control.
            - name: score
              type: short
              level: extended
              description: >
               Respondent's maturity score for the high level maturity control.
            - name: comments
              type: text
              level: extended
              description: >
                Respondent's comments for the high level maturity control.
        - name: tlsa
          type: group
          level: extended
          description: >
           Technical Level Security Assessment
          fields:
            - name: id
              type: keyword
              level: extended
              description: >
               Identifier of the technical level security control (e.g. ABC.01).
            - name: title
              type: keyword
              level: extended
              description: >
               TODO
            - name: description
              type: text
              level: extended
              description: >
               Description of technical level security control starting with the id.
            - name: testing
              type: text
              level: extended
              description: >
               Examples on how to test the implementation of the technical level security control.
            - name: category
              type: keyword
              level: extended
              description: >
               Category of the technical level security control.
            - name: priority
              type: short
              level: extended
              description: >
               Priority of the technical level security control with integer values ranging from 1 (highest) to 5 (lowest).
            - name: implemented
              type: keyword
              level: extended
              description: >
               Respondent's assessment on the implementation of the technical level security control. Valid values are: 'Yes', 'No', 'N.a.', and 'Alternative Controls'.
            - name: comments
              type: text
              level: extended
              description: >
               Respondent's comments for the technical level security control.
            - name: constraints
              type: text
              level: extended
              description: >
               Respondent's description of constraints requiring an alternative control for the technical level security control.
            - name: mitigation
              type: text
              level: extended
              description: >
               Respondent's description of the implemented mitigation using the alternative control for the technical level security control.
            - name: status
              type: keyword
              level: extended
              description: >
               Information Security Team's decision on the implementation of a control. This field is automatically generated based on baseline.tlsa.implemented: 'Yes' -> 'Implemented', 'No' -> 'Not implemented', 'N.a.' -> 'Not implemented', 'Alternative Control' -> None (to indicate need for review).
            - name: review_response
              type: text
              level: extended
              description: >
               Information Security Team's response to an alternative control implementation.
            - name: review_reason
              type: text
              level: extended
              description: >
               Information Security Team's reasoning to an alternative control implementation.
    
    - name: cloud
      title: Cloud
      group: 2
      description: >
        Fields related to the cloud or infrastructure the events
        are coming from.
      footnote: >
        Examples: If Metricbeat is running on an EC2 host and fetches data from its
        host, the cloud info contains the data about this machine. If Metricbeat
        runs on a remote machine outside the cloud and fetches data from a service
        running in the cloud, the field contains cloud data from the machine the
        service is running on.
      type: group
      fields:
        - name: provider
          level: extended
          example: ec2
          type: keyword
          description: >
            Name of the cloud provider. Example values are ec2, gce, or
            digitalocean.
    
        - name: availability_zone
          level: extended
          example: us-east-1c
          type: keyword
          description: >
            Availability zone in which this host is running.
    
        - name: region
          level: extended
          type: keyword
          example: us-east-1
          description: >
            Region in which this host is running.
    
        - name: instance.id
          level: extended
          type: keyword
          example: i-1234567890abcdef0
          description: >
            Instance ID of the host machine.
    
        - name: instance.name
          level: extended
          type: keyword
          description: >
            Instance name of the host machine.
    
        - name: machine.type
          level: extended
          type: keyword
          example: t2.medium
          description: >
            Machine type of the host machine.
    
        - name: account.id
          level: extended
          type: keyword
          example: 666777888999
          description: >
            The cloud account or organization id used to identify different
            entities in a multi-tenant environment.
    
            Examples: AWS account id, Google Cloud ORG Id, or other unique
            identifier.
    
    - name: container
      title: Container
      group: 2
      description: >
        Container fields are used for meta information about the specific container
        that is the source of information. These fields help correlate data based
        containers from any runtime.
      type: group
      fields:
    
        - name: runtime
          level: extended
          type: keyword
          description: >
            Runtime managing this container.
          example: docker
    
        - name: id
          level: core
          type: keyword
          description: >
            Unique container id.
    
        - name: image.name
          level: extended
          type: keyword
          description: >
            Name of the image the container was built on.
    
        - name: image.tag
          level: extended
          type: keyword
          description: >
            Container image tag.
    
        - name: name
          level: extended
          type: keyword
          description: >
            Container name.
    
        - name: labels
          level: extended
          type: object
          object_type: keyword
          description: >
            Image labels.
    
    - name: destination
      title: Destination
      group: 2
      description: >
        Destination fields describe details about the destination of a
        packet/event.
      type: group
      fields:
    
        - name: ip
          level: core
          type: ip
          description: >
            IP address of the destination.
    
            Can be one or multiple IPv4 or IPv6 addresses.
    
        - name: hostname
          level: core
          type: keyword
          description: >
            Hostname of the destination.
    
        - name: port
          level: core
          type: long
          description: >
            Port of the destination.
    
        - name: mac
          level: core
          type: keyword
          description: >
            MAC address of the destination.
    
        - name: domain
          level: core
          type: keyword
          description: >
            Destination domain.
    
        - name: subdomain
          level: core
          type: keyword
          description: >
            Destination subdomain.
    
    - name: device
      title: Device
      group: 2
      description: >
        Device fields are used to provide additional information about the device
        that is the source of the information. This could be a firewall, network device, etc.
      type: group
      fields:
        - name: mac
          level: core
          type: keyword
          description: >
            MAC address of the device
        - name: ip
          level: core
          type: ip
          description: >
            IP address of the device.
        - name: hostname
          level: core
          type: keyword
          description: >
            Hostname of the device.
        - name: vendor
          level: core
          type: keyword
          description: >
            Device vendor information.
        - name: version
          level: core
          type: keyword
          description: >
            Device version.
        - name: serial_number
          level: extended
          type: keyword
          description: >
            Device serial number.
        - name: type
          level: core
          type: keyword
          description: >
            The type of the device the data is coming from.
    
            There is no predefined list of device types. Some examples are
            `endpoint`, `firewall`, `ids`, `ips`, `proxy`.
          example: firewall
    
    - name: email
      title: Email
      group: 2
      description: >
        Email metadata
      type: group
      level: core
      fields:
        - name: sender
          type: keyword
          level: core
          description: >
            Address of sender.
    
        - name: recipient
          type: keyword
          level: core
          description: >
            Address of recipient.
    
        - name: subject
          type: keyword
          level: core
          description: >
            Subject of email.
    
          multi_fields:
            - name: text
              type: text
              level: core
              description: >
                Full text Subject of email.
    
        - name: message_id
          type: keyword
          level: core
          description: >
            ID of message.
    
        - name: related_message_id
          type: keyword
          level: core
          description: >
            ID of related message.
    
        - name: recipient_count
          type: short
          level: extended
          description: >
           Number of recipients for email.
    
        - name: ratelimit
          type: boolean
          level: extended
          description: >
           Sender has hit the ratelimit.
    
        - name: exchange
          type: group
          level: extended
          description: >
           Information specific to exchange email logs
          fields:
            - name: connector_id
              type: keyword
              level: extended
              description: >
    
            - name: custom_data
              type: keyword
              level: extended
              description: >
    
            - name: directionality
              type: keyword
              level: extended
              description: >
    
            - name: event_id
              type: keyword
              level: extended
              description: >
    
            - name: internal_message_id
              type: keyword
              level: extended
              description: >
    
            - name: message_info
              type: keyword
              level: extended
              description: >
    
            - name: original_client_ip
              type: ip
              level: extended
              description: >
    
            - name: original_server_ip
              type: ip
              level: extended
              description: >
    
            - name: recipient_status
              type: keyword
              level: extended
              description: >
    
            - name: reference
              type: keyword
              level: extended
              description: >
    
            - name: related_recipient_address
              type: keyword
              level: extended
              description: >
    
            - name: source
              type: keyword
              level: extended
              description: >
    
            - name: source_context
              type: keyword
              level: extended
              description: >
    
            - name: tenant_id
              type: keyword
              level: extended
              description: >
    
            - name: total_bytes
              type: integer
              level: extended
              description: >
    
    - name: error
      title: Error
      group: 2
      description: >
        These fields can represent errors of any kind. Use them for errors that
        happen while fetching events or in cases where the event itself contains an error.
    
      type: group
      fields:
        - name: id
          level: core
          type: keyword
          description: >
            Unique identifier for the error.
    
        - name: message
          level: core
          type: text
          description: >
            Error message.
    
        - name: code
          level: core
          type: keyword
          description: >
            Error code describing the error.
    
    - name: event
      title: Event
      group: 2
      description: >
        The event fields are used for context information about the data itself.
      type: group
      fields:
    
        - name: id
          level: core
          type: keyword
          description: >
            Unique ID to describe the event.
          example: 8a4f500d
    
        - name: category
          level: core
          type: keyword
          description: >
            Event category.
    
            This can be a user defined category.
          example: metrics
    
        - name: type
          level: core
          type: keyword
          description: >
            A type given to this kind of event which can be used for grouping.
    
            This is normally defined by the user.
          example: nginx-stats-metrics
    
        - name: action
          level: core
          type: keyword
          description: >
            The action captured by the event. The type of action will vary from
            system to system but is likely to include actions by security services,
            such as blocking or quarantining; as well as more generic actions such
            as login events, file i/o or proxy forwarding events.
    
            The value is normally defined by the user.
          example: reject
    
        - name: module
          level: core
          type: keyword
          description: >
            Name of the module this data is coming from.
    
            This information is coming from the modules used in Beats or Logstash.
          example: mysql
    
        - name: dataset
          level: core
          type: keyword
          description: >
            Name of the dataset.
    
            The concept of a `dataset` (fileset / metricset) is used in Beats as a
            subset of modules. It contains the information which is currently
            stored in metricset.name and metricset.module or fileset.name.
          example: stats
    
        - name: severity
          level: core
          type: long
          example: "7"
          description: >
            Severity describes the severity of the event. What the different
            severity values mean can very different between use cases. It's up to
            the implementer to make sure severities are consistent across events.
    
        - name: original
          level: core
          type: keyword
          # Unfortunately this example is not shown correctly yet as | do not work
          # in tables well
          # Is &#124; is the representation of | it works except for cases where
          # used ticks.
          example: "Sep 19 08:26:10 host CEF:0&#124;Security&#124;
              threatmanager&#124;1.0&#124;100&#124;
              worm successfully stopped&#124;10&#124;src=10.0.0.1
              dst=2.1.2.2spt=1232"
          description: >
              Raw text message of entire event. Used to demonstrate log integrity.
    
              This field is not indexed and doc_values are disabled. It cannot be
              searched, but it can be retrieved from `_source`.
          index: false
          doc_values: false
    
        - name: hash
          level: extended
          type: keyword
          example: "123456789012345678901234567890ABCD"
          description: >
              Hash (perhaps logstash fingerprint) of raw field to be able to
              demonstrate log integrity.
    
        - name: version
          level: core
          type: keyword
          required: true
          description: >
            The version field contains the version an event for ECS adheres to.
    
            This field should be provided as part of each event to make it possible
            to detect to which ECS version an event belongs.
    
            event.version is a required field and must exist in all events. It
            describes which ECS version the event adheres to.
    
            The current version is 0.1.0.
          example: 0.1.0
    
        - name: duration
          level: core
          type: long
          description: >
            Duration of the event in nanoseconds.
    
        - name: created
          level: core
          type: date
          description: >
            event.created contains the date when the event was created.
    
            This timestamp is distinct from @timestamp in that @timestamp contains
            the processed timestamp. For logs these two timestamps can be different
            as the timestamp in the log line and when the event is read for example
            by Filebeat are not identical. `@timestamp` must contain the timestamp
            extracted from the log line, event.created when the log line is read.
            The same could apply to package capturing where @timestamp contains the
            timestamp extracted from the network package and event.created when the
            event was created.
    
            In case the two timestamps are identical, @timestamp should be used.
    
        - name: risk_score
          level: core
          type: float
          description: >
            Risk score or priority of the event (e.g. security solutions).
            Use your system's original value here.
    
        - name: risk_score_norm
          level: extended
          type: float
          description: >
            Normalized risk score or priority of the event, on a scale of 0 to 100.
    
            This is mainly useful if you use more than one system that assigns
            risk scores, and you want to see a normalized value across all systems.
    
    - name: file
      group: 2
      title: File
      description: >
        File fields provide details about each file.
      type: group
      fields:
    
      - name: path
        level: extended
        type: keyword
        description: Path to the file.
    
      - name: target_path
        level: extended
        type: keyword
        description: Target path for symlinks.
    
      - name: extension
        level: extended
        type: keyword
        description: >
          File extension.
    
          This should allow easy filtering by file extensions.
        example: png
    
      - name: type
        level: extended
        type: keyword
        description: File type (file, dir, or symlink).
    
      - name: device
        level: extended
        type: keyword
        description: Device that is the source of the file.
    
      - name: inode
        level: extended
        type: keyword
        description: Inode representing the file in the filesystem.
    
      - name: uid
        level: extended
        type: keyword
        description: >
          The user ID (UID) or security identifier (SID) of the file owner.
    
      - name: owner
        level: extended
        type: keyword
        description: File owner's username.
    
      - name: gid
        level: extended
        type: keyword
        description: Primary group ID (GID) of the file.
    
      - name: group
        level: extended
        type: keyword
        description: Primary group name of the file.
    
      - name: mode
        level: extended
        type: keyword
        example: 0640
        description: Mode of the file in octal representation.
    
      - name: size
        level: extended
        type: long
        description: File size in bytes (field is only added when `type` is
            `file`).
    
      - name: mtime
        level: extended
        type: date
        description: Last time file content was modified.
    
      - name: ctime
        level: extended
        type: date
        description: Last time file metadata changed.
    
    - name: geo
      title: Geo
      group: 2
      description: >
        Geo fields can carry data about a specific location related to an event
        or geo information for an IP field.
      type: group
      fields:
    
        - name: continent_name
          level: core
          type: keyword
          description: >
            Name of the continent.
    
        - name: country_iso_code
          level: core
          type: keyword
          description: >
            Country ISO code.
    
        - name: location
          level: core
          type: geo_point
          description: >
            Longitude and latitude.
    
        - name: region_name
          level: core
          type: keyword
          description: >
            Region name.
    
        - name: city_name
          level: core
          type: keyword
          description: >
            City name.
    
    - name: host
      title: Host
      group: 2
      description: >
        Host fields provide information related to a host. A host can be a
        physical machine, a virtual machine, or a Docker container.
    
        Normally the host information is related to the machine on which the event
        was generated/collected, but they can be used differently if needed.
      type: group
      fields:
    
        - name: hostname
          level: core
          type: keyword
          description: >
            Hostname of the host.
    
            It can contain what `hostname` returns on Unix systems, the fully
            qualified domain name, or a name specified by the user. The sender
            decides which value to use.
    
        - name: id
          level: core
          type: keyword
          description: >
            Unique host id.
    
            As hostname is not always unique, use values that are meaningful
            in your environment.
    
            Example: The current usage of `beat.name`.
        - name: ip
          level: core
          type: ip
          description: >
            Host ip address.
    
        - name: mac
          level: core
          type: keyword
          description: >
            Host mac address.
    
        - name: type
          level: core
          type: keyword
          description: >
            Type of host.
    
            For Cloud providers this can be the machine type like `t2.medium`.
            If vm, this could be the container, for example, or other information
            meaningful in your environment.
    
        # Operating System information
        - name: os.platform
          level: extended
          type: keyword
          description: >
            Operating system platform (centos, ubuntu, windows, etc.)
          example: darwin
    
        - name: os.name
          level: extended
          type: keyword
          example: "Mac OS X"
          description: >
            Operating system name.
    
        - name: os.family
          level: extended
          type: keyword
          example: "debian"
          description: >
            OS family (redhat, debian, freebsd, windows, etc.)
    
        - name: os.version
          level: extended
          type: keyword
          example: "10.12.6"
          description: >
            Operating system version.
    
        - name: architecture
          level: core
          type: keyword
          example: "x86_64"
          description: >
            Operating system architecture.
    
    - name: http
      title: HTTP
      group: 2
      description: >
        Fields related to HTTP requests and responses.
      type: group
      fields:
    
        - name: request.method
          level: extended
          type: keyword
          description: >
            Http request method.
          example: GET, POST, PUT
    
        - name: response.status_code
          level: extended
          type: long
          description: >
            Http response status code.
          example: 404
    
        - name: response.body
          level: extended
          type: keyword
          description: >
            The full http response body.
          example: Hello world
    
        - name: version
          level: extended
          type: keyword
          description: >
            Http version.
          example: 1.1
    
    - name: infosec
      title: Information Security
      group: 2
      description: >
        Information Security information. Used as part of authorisation.
      type: group
      level: extended
      fields:
    
        - name: unit_code
          type: keyword
          level: extended
          description: >
           Information Security Team unit code (based on OAK LDAP unit codes).
    
        - name: log_type
          type: keyword
          level: extended
          description: >
           Type of log, used so determine index names.
    
        - name: group
          type: keyword
          level: extended
          description: >
           Unit or team we receive the logs from, used to determine index names and ACLs.
    
        - name: service
          type: keyword
          level: extended
          description: >
           The Information Security Team service (e.g. Baseline Compliance)
          example: CERT - Computer Security Incident Detection, Response and Prevention
          phase: 0
    
    - name: pras
      title: PRAS
      group: 2
      description: >
       PRAS
      type: group
      level: extended
      fields:
    
        - name: l1
          type: keyword
          level: extended
          description: >
           PRAS Level 1 - the division.
    
        - name: l2
          type: keyword
          level: extended
          description: >
           PRAS Level 2 - the department.
    
        - name: l3
          type: keyword
          level: extended
          description: >
           PRAS Level 3 - the sub-department (sometimes use for service).
    
    - name: log
      title: Log
      description: >
        Fields which are specific to log events.
      type: group
      fields:
    
        - name: level
          level: core
          type: keyword
          description: >
            Log level of the log event.
    
            Some examples are `WARN`, `ERR`, `INFO`.
          example: ERR
    
        - name: original
          level: core
          type: keyword
          example: "Sep 19 08:26:10 localhost My log"
          index: false
          doc_values: false
          description: >
    
            This is the original log message and contains the full log message
            before splitting it up in multiple parts.
    
            In contrast to the `message` field which can contain an extracted part
            of the log message, this field contains the original, full log message.
            It can have already some modifications applied like encoding or new
            lines removed to clean up the log message.
    
            This field is not indexed and doc_values are disabled so it can't be
            queried but the value can be retrieved from `_source`.
    
    - name: network
      title: Network
      group: 2
      description: >
        Fields related to network data.
      type: group
      fields:
    
        - name: name
          level: extended
          type: keyword
          description: >
            Name given by operators to sections of their network.
          example: Guest Wifi
    
        - name: protocol
          level: core
          type: keyword
          description: >
            Network protocol name.
          example: http
    
        - name: direction
          level: core
          type: keyword
          description: >
            Direction of the network traffic.
    
            Recommended values are:
              * inbound
              * outbound
              * unknown
          example: inbound
    
        - name: forwarded_ip
          level: core
          type: ip
          description: >
            Host IP address when the source IP address is the proxy.
          example: 192.1.1.2
    
        # Metrics
        - name: inbound.bytes
          level: core
          type: long
          description: >
            Network inbound bytes.
          example: 184
    
        - name: inbound.packets
          level: core
          type: long
          description: >
            Network inbound packets.
          example: 12
    
        - name: outbound.bytes
          level: core
          type: long
          description: >
            Network outbound bytes.
          example: 184
    
        - name: outbound.packets
          level: core
          type: long
          description: >
            Network outbound packets.
          example: 12
    
        - name: total.bytes
          level: core
          type: long
          description: >
            Network total bytes. The sum of inbound.bytes + outbound.bytes.
          example: 368
    
        - name: total.packets
          level: core
          type: long
          description: >
            Network outbound packets. The sum of inbound.packets + outbound.packets
          example: 24
    
    - name: organization
      title: Organization
      group: 2
      description: >
        The organization fields enrich data with information about the company or entity
        the data is associated with. These fields help you arrange or filter data stored in an index by one or multiple
        organizations.
      type: group
      fields:
    
        - name: name
          level: extended
          type: keyword
          description: >
            Organization name.
    
        - name: id
          level: extended
          type: keyword
          description: >
            Unique identifier for the organization.
    - name: os
      title: Operating System
      group: 2
      description: >
        The OS fields contain information about the operating system.
        These fields are often used inside other prefixes, such as `host.os.*` or `user_agent.os.*`.
      type: group
      fields:
    
        - name: platform
          level: extended
          type: keyword
          description: >
            Operating system platform (such centos, ubuntu, windows).
          example: darwin
    
        - name: name
          level: extended
          type: keyword
          example: "Mac OS X"
          description: >
            Operating system name.
    
        - name: family
          level: extended
          type: keyword
          example: "debian"
          description: >
            OS family (such as redhat, debian, freebsd, windows).
    
        - name: version
          level: extended
          type: keyword
          example: "10.12.6-rc2"
          description: >
            Operating system version as a raw string.
    
        - name: kernel
          level: extended
          type: keyword
          example: "4.4.0-112-generic"
          description: >
            Operating system kernel version as a raw string.
    
    - name: process
      title: Process
      group: 2
      description: >
        These fields contain information about a process.
        These fields can help you correlate metrics information with a process id/name
        from a log message.  The `process.pid` often stays in the metric itself and is
        copied to the global field for correlation.
      type: group
      fields:
    
        - name: args
          level: extended
          type: keyword
          description: >
            Process arguments.
    
            May be filtered to protect sensitive information.
          example: ["-l", "user", "10.0.0.16"]
    
        - name: name
          level: extended
          type: keyword
          description: >
            Process name.
    
            Sometimes called program name or similar.
          example: ssh
    
        - name: pid
          level: core
          type: long
          description: >
            Process id.
          exmple: ssh
    
        - name: ppid
          level: extended
          type: long
          description: >
            Process parent id.
    
        - name: title
          level: extended
          type: keyword
          description: >
            Process title.
    
            The proctitle, some times the same as process name. Can also be different:
            for example a browser setting its title to the web page currently opened.
    
    - name: service
      title: Service
      group: 2
      description: >
        The service fields describe the service for or from which the data was
        collected. These fields help you find and correlate logs for a specific
        service and version.
      type: group
      fields:
    
        - name: id
          level: core
          type: keyword
          description: >
            Unique identifier of the running service.
    
            This id should uniquely identify this service. This makes it possible
            to correlate logs and metrics for one specific service.
    
            Example: If you are experiencing issues with one redis instance, you
            can filter on that id to see metrics and logs for that single instance.
    
          example: d37e5ebfe0ae6c4972dbe9f0174a1637bb8247f6
    
        - name: name
          level: core
          type: keyword
          example: "elasticsearch-metrics"
          description: >
            Name of the service data is collected from.
    
            The name of the service is normally user given. This allows if two
            instances of the same service are running on the same machine
            they can be differentiated by the `service.name`.
    
            Also it allows for distributed services that run on multiple hosts to
            correlate the related instances based on the name.
    
            In the case of Elasticsearch the service.name could contain the cluster
            name. For Beats the service.name is by default a copy of the `service.type`
            field if no name is specified.
    
        - name: type
          level: core
          type: keyword
          example: "elasticsearch"
          description: >
            The type of the service data is collected from.
    
            The type can be used to group and correlate logs and metrics from one
            service type.
    
            Example: If logs or metrics are collected from Elasticsearch, `service.type` would be
            `elasticsearch`.
    
        - name: state
          level: core
          type: keyword
          description: >
            Current state of the service.
    
        - name: version
          level: core
          type: keyword
          example: "3.2.4"
          description: >
            Version of the service the data was collected from.
    
            This allows to look at a data set only for a specific version of a
            service.
    
        - name: ephemeral_id
          level: extended
          type: keyword
          description: >
            Ephemeral identifier of this service (if one exists).
    
            This id normally changes across restarts, but `service.id` does not.
          example: 8a4f500f
    
    - name: source
      title: Source
      group: 2
      description: >
        Source fields describe details about the source of the event.
      type: group
      fields:
    
        - name: ip
          level: core
          type: ip
          description: >
            IP address of the source.
    
            Can be one or multiple IPv4 or IPv6 addresses.
    
        - name: hostname
          level: core
          type: keyword
          description: >
            Hostname of the source.
    
        - name: port
          level: core
          type: long
          description: >
            Port of the source.
    
        - name: mac
          level: core
          type: keyword
          description: >
            MAC address of the source.
    
        - name: domain
          level: core
          type: keyword
          description: >
            Source domain.
    
        - name: subdomain
          level: core
          type: keyword
          description: >
            Source subdomain.
    
    - name: ticket
      title: Ticket
      group: 2
      description: >
        The ticket fields contain data about tickets from ticketing systems.
        This current version is focused on Reqest Tracker
        (https://www.bestpractical.com/rt/), but future versions will try to
        be more agnostic.
      type: group
      level: extended
      fields:
        - name: id
          type: integer
          level: extended
          description: >
            The unique identifier for this ticket
          example: 12345
          phase: 0
        - name: subject
          type: text
          level: extended
          description: >
            The subject or a short summary for this ticket
          example: Huston, we have a problem
          phase: 0
        - name: status
          type: keyword
          level: extended
          description: >
            The status of this ticket. It is expected that the set of
            statuses are a known (short) list.
          example: resolved
          phase: 0
        - name: priority
          type: integer
          level: extended
          description: >
            The importance of this ticket as an integer
          example: 3
          phase: 0
        - name: queue
          type: keyword
          level: extended
          description: >
            The queue or service of this ticket. It is expected that the
            queues or services are from a defined list.
          example: email
          phase: 0
        - name: owner
          type: keyword
          level: extended
          description: >
            The responsible person for this ticket. This should uniquely
            identify each possible owner, and it is generally expected that
            this will be a username or email address.
          example: john.smith@company.example.com
          phase: 0
        - name: requestors
          type: keyword
          level: extended
          description: >
            The person or person(s) originating or partaking in the request.
            This is generally expected that this will be a username or
            email address.
          example: [ "john.smith@company.example.com", "jane.doe@company.example.com" ]
          phase: 0
        - name: ccs
          type: keyword
          level: extended
          description: >
            Other people interested in the correspondance that appears on
            this ticket. This could be an interested party or someone who
            should be aware of what is going on. It is generally expected
            that this will be a username or email address.
          example: [ "alice@company.example.com", "bob@company.example.com" ]
          indexed: false
          phase: 0
        - name: adminccs
          type: keyword
          level: extended
          description: >
            People other than the owner interested in the full history (including
            internal comments that happens on this ticket. This could be an an
            internal party who is not normally interested in other tickets
            It is generally expected that this will be a username or email
            address.
          indexed: false
          phase: 0
        - name: created
          type: date
          level: extended
          description: >
            The date and time the ticket was created. Set by the system
            automatically.
          phase: 0
        - name: starts
          type: date
          level: extended
          description: >
            When the ticket should be started. A user set date and time
            which may have local meaning.
          indexed: false
          phase: 0
        - name: started
          type: date
          level: extended
          description: >
            The date and time the ticket was started (i.e. when first taken).
            Set by the system automatically.
          indexed: false
          phase: 0
        - name: told
          type: date
          level: extended
          description: >
            The date and time the ticket was started (i.e. when first taken).
            Set by the system automatically.
          indexed: false
          phase: 0
        - name: due
          type: date
          level: extended
          description: >
            The date and time the ticket should be finished by. This is
            either user set or determined by the queue default.
          indexed: false
          phase: 0
        - name: closed
          type: date
          level: extended
          description: >
            The date and time the ticket was resolved.
            Set by the system automatically.
          phase: 0
        - name: updated
          type: date
          level: extended
          description: >
            The date and time the ticket was last changed in some way
            (correspondance, comments, status change, etc).
            Set by the system automatically.
          indexed: false
          phase: 0
        - name: depends_on
          type: long
          level: extended
          indexed: false
          description: >
            The list of other tickets that this ticket depends on.
          phase: 0
        - name: depended_on_by
          type: long
          level: extended
          indexed: false
          description: >
            The list of other tickets that this ticket is a dependancy of.
          phase: 0
        - name: parents
          type: long
          level: extended
          indexed: false
          description: >
            The list of other tickets that this ticket is a child of.
          phase: 0
        - name: children
          type: long
          level: extended
          indexed: false
          description: >
            The list of other tickets that this ticket is a parent of.
          phase: 0
        - name: refers_to
          type: long
          level: extended
          indexed: false
          description: >
            The list of other tickets that this ticket refers to.
          phase: 0
        - name: referred_to_by
          description: >
            The list of other tickets that refer to this ticket.
          type: long
          level: extended
          indexed: false
    
    - name: url
      title: URL
      description: >
        URL fields provide a complete URL, with scheme, host, and path. The URL
        object can be reused in other prefixes, such as `host.url.*` for
        example. Keep the structure consistent whenever you use URL fields.
      type: group
      fields:
    
        - name: href
          level: extended
          type: keyword
          description: >
            Full url. The field is stored as keyword.
          example: https://elastic.co:443/search?q=elasticsearch#top
    
        - name: scheme
          level: extended
          type: keyword
          description: >
            Scheme of the request, such as "https".
    
            Note: The `:` is not part of the scheme.
          example: https
    
        - name: hostname
          level: extended
          type: keyword
          description: >
            Hostname of the request, such as "elastic.co".
    
            In some cases a URL may refer to an IP and/or port directly, without a
            domain name. In this case, the IP address would go to the `hostname` field.
          example: elastic.co
    
        - name: port
          level: extended
          type: integer
          description: >
            Port of the request, such as 443.
          example: 443
    
        - name: path
          level: extended
          type: keyword
          description: >
            Path of the request, such as "/search".
    
        - name: query
          level: extended
          type: keyword
          description: >
            The query field describes the query string of the request,
            such as "q=elasticsearch".
    
            The `?` is excluded from the query string. If a URL contains
            no `?`, there is no query field. If there is a `?` but no query,
            the query field exists with an empty string. The `exists`
            query can be used to differentiate between the two cases.
    
        - name: fragment
          level: extended
          type: keyword
          description: >
            Portion of the url after the `#`, such as "top".
    
            The `#` is not part of the fragment.
    
        - name: username
          level: extended
          type: keyword
          description: >
            Username of the request.
    
        - name: password
          level: extended
          type: keyword
          description: >
            Password of the request.
    
    - name: user
      title: User
      group: 2
      description: >
        The user fields describe information about the user that is relevant
        to  the event. Fields can have one entry or multiple entries. If a
        user has more than one id, provide an array that includes all of
        them.
      type: group
      fields:
    
        - name: id
          level: core
          type: keyword
          description: >
            One or multiple unique identifiers of the user.
    
        - name: name
          level: core
          type: keyword
          description: >
            Name of the user.
    
            The field is a keyword, and will not be tokenized.
    
        - name: email
          level: extended
          type: keyword
          description: >
            User email address.
    
        - name: hash
          level: extended
          type: keyword
          description: >
            Unique user hash to correlate information for a user in anonymized form.
    
            Useful if `user.id` or `user.name` contain confidential information and
            cannot be used.
    
    - name: user_agent
      title: User agent
      group: 2
      description: >
        The user_agent fields normally come from a browser request. They often
        show up in web service logs coming from the parsed user agent string.
      type: group
      fields:
    
        - name: original
          level: extended
          type: keyword
          description: >
            Unparsed version of the user_agent.
    
        - name: device
          level: extended
          type: keyword
          description: >
            Name of the physical device.
    
        - name: version
          level: extended
          type: keyword
          description: >
            Version of the physical device.
    
        - name: major
          level: extended
          type: long
          description: >
            Major version of the user agent.
    
        - name: minor
          level: extended
          type: long
          description: >
            Minor version of the user agent.
    
        - name: patch
          level: extended
          type: keyword
          description: >
            Patch version of the user agent.
    
        - name: name
          level: extended
          type: keyword
          example: Chrome
          description: >
            Name of the user agent.
    
        - name: os.name
          level: extended
          type: keyword
          description: >
            Name of the operating system.
    
        - name: os.version
          level: extended
          type: keyword
          description: >
            Version of the operating system.
    
        - name: os.major
          level: extended
          type: long
          description: >
            Major version of the operating system.
    
        - name: os.minor
          level: extended
          type: long
          description: >
            Minor version of the operating system.
    
    - name: veris
      title: VERIS
      group: 2
      description: >
        The VERIS group documents the vocabulary for event recording and
        incident sharing (VERIS) framework <http://veriscommunity.net/>.
      type: group
      level: extended
      fields:
        - name: incident_confirmation
          title: Incident Confirmation
          type: keyword
          level: extended
          description: >
            Describes if this item is in fact an incident, and the status of
            that incident.
            This is expected to be one of 'Suspected', 'Confirmed', 'False
            Positive', 'Near miss' or 'Not an incident'.
          example: Suspected
          phase: 0
        - name: threat_actor
          title: Threat Actor
          type: keyword
          level: extended
          description: >
            Describes the threat actor - the party who is responsible for
            this incident.
            This is expected to be at least one of 'External', 'Internal',
            or 'Partner Organisation'.
          example: External
          phase: 0
        - name: threat_action
          title: Threat Action
          type: keyword
          level: extended
          description: >
            Describes the threat action - what were the action affecting the
            asset.
            This is expected to be at least one of 'Malware', 'Misuse', 'Social',
            'Hacking', 'Error', 'Physical', 'Environmental' or 'Unknown'.
          example: Social
          phase: 0
        - name: compromised_assets
          title: Compromised Assets
          type: keyword
          level: extended
          description: >
            Describes the compromised assets - the things affected by the
            incident.
            This is expected to be at least one of 'End-user device',
            'People', 'Server', 'Network', 'Media', 'Terminal' or 'Unknown'.
          example: People
          phase: 0
        - name: security_attributes
          title: Security Attributes
          type: keyword
          level: extended
          description: >
            Describes the security attributes - how the asset was affected.
            This is expected to be at least one of 'Confidentiality -
            visiblity', 'Integrity - change or destroy', 'Availability' or
            'Other'.
          example: Integrity - change or destroy
          phase: 0
        - name: discovery_method
          title: Discovery Method
          type: keyword
          level: extended
          description: >
            Describes how the incident was discoverd.
            This is expected to be at least one of a small number of values
            taken from <http://veriscommunity.net/enums.html#section-incident_desc>.
          example: Int - log review
          phase: 0
    
    - name: vulnerability
      title: Vulnerability
      group: 2
      description: >
        To ingest vulnerability scan results
    
      type: group
      level: extended
      fields:
        - name: cves
          type: keyword
          level: extended
          description:
    
        - name: cvss
          type: float
          level: extended
          description:
    
        - name: description
          type: keyword
          level: extended
          description:
    
        - name: test_id
          type: keyword
          level: extended
          description:
    
        - name: test_name
          type: keyword
          level: extended
          description:
    
        - name: test_output
          type: keyword
          level: extended
          description:
    
        - name: severity
          type: keyword
          level: extended
          description:
    
        - name: scan_policy
          type: keyword
          level: extended
          description:
    
        - name: other_references
          type: keyword
          level: extended
          description:
    
        - name: solution
          type: keyword
          level: extended
          description:
    
        - name: affected_software
          type: keyword
          level: extended
          description:
    
        - name: bids
          type: keyword
          level: extended
          description:
    
        - name: certs
          type: keyword
          level: extended
          description:
    
        - name: impact
          type: keyword
          level: extended
          description:
    
        - name: result_id
          type: keyword
          level: extended
          description:
    
        - name: solution_type
          type: keyword
          level: extended
          description:
    
        - name: specific_result
          type: keyword
          level: extended
          description:
    
        - name: task_id
          type: keyword
          level: extended
          description:
    
        - name: task_name
          type: keyword
          level: extended
          description:
    
        - name: detection_method
          type: keyword
          level: extended
          description:
    
        - name: insight
          type: keyword
          level: extended
          description:
